/**
 * -Column 列，沿垂直方向布局的容器。
 * -Row 行，沿水平方向布局的容器。
 * /////////////////////////////////////////////
 * /////////////////////////////////////////////
 * 主轴和交叉轴：
 * 一个垂直，一个水平；以一个为主轴时，另一个就是交叉轴。
 * 属性介绍：
 * -justifyContent：设置子组件在主轴方向上的对齐格式。
 * 子组件在主轴方向上的对齐使用justifyContent属性来设置，其参数类型是FlexAlign。FlexAlign 定义了以下几种类型：
 * --Start：元素在主轴方向首端对齐，第一个元素与行首对齐，同时后续的元素与前一个对齐（简单理解：首部对齐）。
 * --Center：元素在主轴方向中心对齐（简单理解：居中对齐）。
 * --End：元素在主轴方向尾部对齐（简单理解：尾部对齐）。
 * --SpaceBetween：元素在主轴方向均匀分配弹性元素，相邻元素之间距离相同。 第一个元素与行首对齐，最后一个元素与行尾对齐。
 * --SpaceAround：元素在主轴方向均匀分配弹性元素，相邻元素之间距离相同。 第一个元素到行首的距离和最后一个元素到行尾的距离是相邻元素之间距离的一半。
 * --SpaceEvenly：元素在主轴方向等间距布局，无论是相邻元素还是边界元素到容器的间距都一样。
 * ////////////////
 * -alignItems：设置子组件在交叉轴方向上的对齐格式。
 * Column容器的主轴是垂直方向，交叉轴是水平方向，其参数类型为HorizontalAlign（水平对齐），HorizontalAlign 定义了以下几种类型：
 * --Start：设置子组件在水平方向上按照起始端对齐。
 * --Center（默认值）：设置子组件在水平方向上居中对齐。
 * --End：设置子组件在水平方向上按照末端对齐。
 * /////////////////
 * -Row容器的主轴是水平方向，交叉轴是垂直方向，其参数类型为VerticalAlign（垂直对齐），VerticalAlign定义了以下几种类型：
 * --Top：设置子组件在垂直方向上居顶部对齐。
 * --Center（默认值）：设置子组件在竖直方向上居中对齐。
 * --Bottom：设置子组件在竖直方向上居底部对齐。
 * /////////////////////////////////////////////
 * /////////////////////////////////////////////
 * 接口介绍
 * -Column(value?:{space?: string | number})
 * -Row(value?:{space?: string | number})
 * --Column和Row容器的接口都有一个可选参数space，表示子组件在主轴方向上的间距。
 * --
 * --
 * --
 * --：
 * --：
 */

@Entry
@Component
struct ColumnAndRow {
  build() {

    Row() {
      Column() {

      }
      .width('100%')
    }
    .height('100%')
  }
}